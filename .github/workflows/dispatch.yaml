name: Update Submodule

on:
  repository_dispatch:
    types: [openapi-update]

permissions:
  id-token: write
  contents: write
  pull-requests: write

jobs:
  check_submodules_for_updates:
    timeout-minutes: 10

    runs-on: ubuntu-latest

    outputs:
      pr-lists: ${{ steps.pr-lists.outputs.pr-lists }}
      status: ${{ steps.status.outputs.status }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Update submodules
        id: update
        run: git submodule update --remote --recursive

      - name: Run git status
        id: status
        run: echo "status=$(git status -s)" >> $GITHUB_OUTPUT

      - name: Get Submodule PR
        id: pr-lists
        if: ${{ steps.status.outputs.status }}
        run: |
          pr_list=$(gh pr list --label "submodule" --json number | jq '[.[].number]')
          echo "pr-lists=$(echo $pr_list | jq -c .)" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Node.js
        if: ${{ steps.status.outputs.status }}
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        if: ${{ steps.status.outputs.status }}
        run: npm install

      - name: Create Branch Name
        env:
          TZ: "Asia/Tokyo"
        run: echo "SUBMODULE_BRANCH_NAME=feature/Update-submodules-$(date +'%Y-%m-%d_%H-%M')" >> $GITHUB_ENV

      - name: Create new Branch
        if: ${{ steps.status.outputs.status }}
        id: branch
        run: |
          git checkout -b ${{ env.SUBMODULE_BRANCH_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Orval
        if: ${{ steps.status.outputs.status }}
        run: npm run orval

      - name: commit and push files
        if: ${{ steps.status.outputs.status }}
        run: |
          git add .
          git config --local user.email "tentyo0620@icloud.com"
          git config --local user.name "kamegoro"
          git commit -m "Update submodules at $(date "+%Y-%m-%d %H:%M:%S")"
          git push origin ${{ env.SUBMODULE_BRANCH_NAME }}

      - name: Create PR
        if: ${{ steps.status.outputs.status }}
        run: |
          gh pr create -B main -H ${{ env.SUBMODULE_BRANCH_NAME }} --reviewer kamegoro --label submodule --title 'Update Submodules' --body 'Created by Github'

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  close_old_pr:
    needs: check_submodules_for_updates
    if: needs.check_submodules_for_updates.outputs.status && needs.check_submodules_for_updates.outputs.pr-lists

    timeout-minutes: 10

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Print pr lists
        run: |
          echo ${{ needs.check_submodules_for_updates.outputs.pr-lists }}
